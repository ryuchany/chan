<?xml version="1.0" encoding="UTF-8"?>

<!-- 
	Spring에서 사용자 요청을 모두 처리하는 DispatcherServlet이 알아야 하는 설정
	(DispatcherServlet에게 부탁하는 내용들이 적혀있는 문서)
	
	= 사용자가 OOO 과 같은 요청을 보낸다면 OOO 으로 처리해주세요!
	= 요청과 관련된 설정이 이곳에 작성됨
 -->
<beans xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- 
		View Resolver 설정
		= 컨트롤러에서 업무 수행 후 JSP와 연결할 때 작성하는 주소를 간소화 하는 역할의 도구
		= org.springframework.web.servlet.view.InternalResourceViewResolver
		= prefix라는 속성으로 접두사를 설정
	 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>

	<!-- 
		Component Scan 설정
		= 자동으로 구성요소들을 탐색하는 설정
		= 특정 지점(base-package)을 설정하여 해당 지점에 있는 모든 요소를 탐색하여 등록한다
		= spring-context 모듈의 설정
		= 제외하고 싶은 내용은 exclude-filter, 추가하고 싶은 내용은 include-filter 를 사용
		= 자동일 경우는 제외나 추가가 안된다.
		= 어노테이션 설정이 된 파일들을 탐색하여 자동으로 이 파일에 등록 처리
		= @Controller , @RestController , @Service , @Component , @Repository , ....
		= annotation-driven 설정을 해야 annotation이 활성화된다
	 -->
	<mvc:annotation-driven></mvc:annotation-driven>
	<context:component-scan base-package="com.kh.spring06"></context:component-scan>


</beans>