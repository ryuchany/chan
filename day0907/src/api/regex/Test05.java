package api.regex;

import java.util.regex.Pattern;

public class Test05 {
	public static void main(String[] args) {

		String birth = "2020-02-29";

//		1. 모든 달이 31일이라고 가정한 경우의 정규표현식
//		String regex = "^(19[0-9]{2}|20[0-9]{2})-(0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[0-9]|3[0-1])$";

//		2. 2월은 28일까지라고 정한 경우의 정규표현식
//		String regex = "^(19[0-9]{2}|20[0-9]{2})-(02-(0[1-9]|1[0-9]|2[0-8])|(0[469]|11)-(0[1-9]|1[0-9]|2[0-9]|30)|(0[13578]|1[02])-(0[1-9]|1[0-9]|2[0-9]|3[0-1]))$";

//		3. 프로그래밍 코드를 이용하여 윤년 여부를 계산한 뒤 2월에 적용시킨 정규표현식
		int year = Integer.parseInt(birth.substring(0, 4));
		boolean isYunYear = year % 400 == 0 || year % 100 != 0 && year % 4 == 0;
		String regex;
		if (isYunYear) {
			regex = "^(19[0-9]{2}|20[0-9]{2})-(02-(0[1-9]|1[0-9]|2[0-9])|(0[469]|11)-(0[1-9]|1[0-9]|2[0-9]|30)|(0[13578]|1[02])-(0[1-9]|1[0-9]|2[0-9]|3[0-1]))$";
		} else {
			regex = "^(19[0-9]{2}|20[0-9]{2})-(02-(0[1-9]|1[0-9]|2[0-8])|(0[469]|11)-(0[1-9]|1[0-9]|2[0-9]|30)|(0[13578]|1[02])-(0[1-9]|1[0-9]|2[0-9]|3[0-1]))$";
		}

		if (Pattern.matches(regex, birth)) {
			System.out.println("생년월일 설정이 완료되었습니다.");
		} else {
			System.out.println("잘못된 생년월일 형식입니다.");
		}

	}
}